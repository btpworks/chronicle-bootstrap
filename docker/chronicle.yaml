---
version: "3.9"
networks:
  default:
    name: chronicle-${ISOLATION_ID}
networks:
  default:
    name: chronicle-${ISOLATION_ID}
services:
  settings-tp:
    image: blockchaintp/sawtooth-settings-tp:BTP2.1.0
    depends_on:
      - validator
    entrypoint: settings-tp -v --connect tcp://validator:4004
    volumes: &rngVolumes
      - /dev/urandom:/dev/random
      - /dev/urandom:/dev/urandom

  validator:
    image: blockchaintp/sawtooth-validator:BTP2.1.0
    expose:
      - 4004
      - 8800
      - 5050
    ports:
      - "4004:4004"
      - "8800:8800"
      - "5050:5050"
    entrypoint: /bin/bash
    command:
      - -exc
      - |
        sawadm keygen
        sawtooth keygen
        sawset genesis -k \
          /etc/sawtooth/keys/validator.priv -o config-genesis.batch
        sawset proposal create -k /etc/sawtooth/keys/validator.priv \
          sawtooth.consensus.min_wait_time=0 \
          sawtooth.consensus.max_wait_time=0 \
          sawtooth.consensus.algorithm.name=Devmode \
          sawtooth.consensus.algorithm.version=0.1  \
          chronicle.opa.policy_name=allow_transactions \
          chronicle.opa.entrypoint=allow_transactions.allowed_users \
          -o consensus-settings.batch
        sawadm genesis config-genesis.batch consensus-settings.batch
        sawtooth-validator -vvv --scheduler parallel \
          --endpoint tcp://validator:8800 --bind component:tcp://eth0:4004 \
          --bind consensus:tcp://eth0:5050 --bind network:tcp://eth0:8800
    volumes: *rngVolumes

  devmode-engine:
    image: blockchaintp/sawtooth-devmode-engine-rust:BTP2.1.0
    depends_on:
      - validator
    entrypoint: devmode-engine-rust -C tcp://validator:5050
    volumes: *rngVolumes

  rest-api:
    image: blockchaintp/sawtooth-rest-api:BTP2.1.0
    expose:
      - 8008
    ports:
      - "8008:8008"
    depends_on:
      - validator
    entrypoint: |
      sawtooth-rest-api --connect tcp://validator:4004 --bind rest-api:8008
    volumes: *rngVolumes

  chronicle-sawtooth-tp:
    environment: &rustenv
      - RUST_BACKTRACE=full
      - RUST_LOG=info,cranelift_codegen=off,wasmtime_cranelift=off,regalloc2::ion=off,cranelift_wasm=off
    image: &chronicleTpImage blockchaintp/chronicle-tp-amd64:${CHRONICLE_TP_VERSION}
    entrypoint: /bin/bash
    command:
      - -exc
      - |
        /usr/local/bin/chronicle_sawtooth_tp \
         -C tcp://validator:4004 \
         --console-logging pretty
    depends_on:
      - validator
      - opa-init
    volumes: *rngVolumes

  opa-tp:
    environment:
      - RUST_BACKTRACE=full
      - RUST_LOG=info,cranelift_codegen=off,wasmtime_cranelift=off,regalloc2::ion=off,cranelift_wasm=off
    image: &chronicleOpaTpImage blockchaintp/opa-tp-amd64:${CHRONICLE_TP_VERSION}
    entrypoint: >
      /bin/bash -xc "/usr/local/bin/opa-tp
      -C tcp://validator:4004
      --console-logging pretty"
    depends_on:
      - validator
    volumes: *rngVolumes

  chronicle-pg:
    environment:
      - POSTGRES_DB=chronicle
      - POSTGRES_USER=chronicle
      - POSTGRES_PASSWORD=chronicle
    image: postgres:13.9-alpine
    ports:
      - "5432:5432"

  domain:
    environment:
      - RUST_BACKTRACE=full
      - RUST_LOG=info,cranelift_codegen=off,wasmtime_cranelift=off,regalloc2::ion=off,cranelift_wasm=off
      - PGHOST=chronicle-pg
      - PGPASSWORD=chronicle
    image: &chronicleImage ${CHRONICLE_IMAGE}:${CHRONICLE_VERSION}
    entrypoint: /bin/bash
    restart: on-failure:5
    links:
      - "opa-init:opa-init"
    command:
      - -exc
      - |
        /usr/local/bin/chronicle \
          -c /etc/chronicle/config/config.toml \
          --console-logging pretty verify-keystore
        sleep 10
        /usr/local/bin/chronicle \
          -c /etc/chronicle/config/config.toml \
          --console-logging pretty \
          --sawtooth tcp://validator:4004 \
          serve-api \
          --interface 0.0.0.0:9982
    volumes:
      - type: bind
        source: ./chronicle-config/config.toml
        target: /etc/chronicle/config/config.toml
    expose:
      - 9982
    ports:
      - "9982:9982"
    depends_on:
      - opa-init
      - validator
      - chronicle-pg

  # A chronicle container to exec into for CLI operations
  chronicle-sawtooth-cli:
    environment:
      - RUST_BACKTRACE=full
      - RUST_LOG=info,cranelift_codegen=off,wasmtime_cranelift=off,regalloc2::ion=off,cranelift_wasm=off
    image: *chronicleImage
    entrypoint: "/bin/sh"
    stdin_open: true
    tty: true
    depends_on:
      - devmode-engine
      - validator
      - opa-init
    volumes: *rngVolumes

  jaeger:
    image: jaegertracing/all-in-one:latest
    expose:
      - 16686
    ports:
      - "5775:5775/udp"
      - "6831:6831/udp"
      - "6832:6832/udp"
      - "5778:5778"
      - "16686:16686"
      - "14268:14268"
      - "9411:9411"

  opa-init:
    image: blockchaintp/opactl-amd64:${CHRONICLE_TP_VERSION}
    entrypoint: /bin/bash
    environment:
      - RUST_BACKTRACE=full
      - RUST_LOG=debug,cranelift_codegen=off,wasmtime_cranelift=off,regalloc2::ion=off,cranelift_wasm=off
    volumes:
      - ${PWD}/policies:/policies
    command:
      - -exc
      - |
        sleep 10
        cd /tmp
        /usr/local/bin/opactl generate --output ./opa_root.pem
        /usr/local/bin/opactl \
          --sawtooth-address  tcp://validator:4004 \
            bootstrap --root-key ./opa_root.pem
        /usr/local/bin/opactl \
          --sawtooth-address tcp://validator:4004 \
          set-policy \
            --id allow_transactions -p /policies/bundle.tar.gz \
            --root-key ./opa_root.pem
        tail -f /dev/null
    depends_on:
      - opa-tp
      - validator
